<UserControl x:Class="CoAPExplorer.WPF.Views.DeviceView"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                          xmlns:local="clr-namespace:CoAPExplorer.WPF.Views"
                          xmlns:rxui="http://reactiveui.net"
                          xmlns:viewModels="clr-namespace:CoAPExplorer.ViewModels;assembly=CoAPExplorer"
                          xmlns:mockViewModels="clr-namespace:CoAPExplorer.WPF.MockViewModels"
                          xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                          xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
                          xmlns:controls="clr-namespace:CoAPExplorer.WPF.Controls"
                          xmlns:converters="clr-namespace:CoAPExplorer.WPF.Converters"
             xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
             mc:Ignorable="d" 
                          d:DesignHeight="441" d:DesignWidth="690"
                          d:DataContext="{d:DesignInstance Type=mockViewModels:DeviceViewModel, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:CoapMessageCodeToStringConverter x:Key="CoapMessageCodeToStringConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <local:DeviceNavigationView x:Name="DeviceNavigation" ViewModel="{Binding Navigation}"
                                    Grid.RowSpan="2" Grid.Column="0"/>
        <materialDesign:ColorZone Mode="PrimaryMid" Padding="8" Grid.Row="0" Grid.Column="1">
            <DockPanel>
                <Button x:Name="NavigateBackButton" ToolTipService.ToolTip="Navigate Back" Margin="4 0 4 0"
                        Padding="0"
                        Style="{StaticResource MaterialDesignToolForegroundButton}">
                    <materialDesign:PackIcon Width="32" Height="32" Kind="ArrowLeft"/>
                </Button>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" Margin="4 0 4 0">
                    <Button x:Name="DuplicateMessageButton" ToolTipService.ToolTip="Duplicate Message"
                            Padding="0"
                        Style="{StaticResource MaterialDesignToolForegroundButton}">
                        <materialDesign:PackIcon Width="32" Height="32" Kind="ContentDuplicate"/>
                    </Button>
                </StackPanel>
                <materialDesign:ColorZone Mode="Standard" Padding="8 4 8 4" CornerRadius="2"
                                          Margin="4 0 4 0" materialDesign:ShadowAssist.ShadowDepth="Depth1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox IsEditable="True" x:Name="Url" TextSearch.TextPath="Url"
                          materialDesign:HintAssist.Hint="URL"
                          BorderBrush="{DynamicResource PrimaryHueMidForegroundBrush}"
                          SelectedItem="{Binding Message}" ItemsSource="{Binding RecentMessages}">
                            <ComboBox.Resources>
                                <Style BasedOn="{StaticResource MaterialDesignComboBox}" TargetType="{x:Type ComboBox}">
                                    <Style.Triggers>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter Property="Background" Value="#FFFFFFFF" />
                                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                            <Setter Property="Background" Value="#FFFFFFFF" />
                                            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Resources>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Label Padding="4" Content="{Binding Url}"/>
                                        <Label Padding="4" IsEnabled="False" Content="{Binding Code, Converter={StaticResource CoapMessageCodeToStringConverter}}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <StackPanel Orientation="Horizontal" Grid.Column="1">
                            <Button x:Name="SendButton" Style="{DynamicResource MaterialDesignToolButton}" Padding="0">
                                <materialDesign:PackIcon Width="32" Height="32" Kind="ArrowRight" />
                            </Button>
                            <Button x:Name="StopButton" Style="{StaticResource MaterialDesignToolButton}" Padding="0">
                                <materialDesign:PackIcon Width="32" Height="32" Kind="CloseCircle" />
                            </Button>
                        </StackPanel>
                    </Grid>
                </materialDesign:ColorZone>
            </DockPanel>
        </materialDesign:ColorZone>

        <!--a large FixedHeaderCount is my quiet protest against needing another lirbary for what should already be part of meterial themes-->
        <dragablz:TabablzControl x:Name="MessageTabControl" FixedHeaderCount="999999999" Grid.Row="1" Grid.Column="1">
            <TabItem Header="REQUEST">
                <local:MessageRequestView x:Name="MessageRequest" />
            </TabItem>
            <TabItem x:Name="ReponseTab" Header="RESPONSE">
                <local:MessageResponseView x:Name="MessageResponse" />
            </TabItem>
        </dragablz:TabablzControl>
    </Grid>
</UserControl>