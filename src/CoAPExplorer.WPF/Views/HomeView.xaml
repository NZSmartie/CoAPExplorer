<Page x:Class="CoAPExplorer.WPF.Views.HomeView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:CoAPExplorer.WPF.Views"
      xmlns:mockViewModels="clr-namespace:CoAPExplorer.WPF.MockViewModels"
      xmlns:rxui="clr-namespace:ReactiveUI;assembly=ReactiveUI.Wpf"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:controls="clr-namespace:CoAPExplorer.WPF.Controls"
      xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
      xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
      mc:Ignorable="d" d:DataContext="{d:DesignInstance Type={x:Type mockViewModels:MockHomeView}, IsDesignTimeCreatable=True}"
      d:DesignHeight="310.526" d:DesignWidth="543.86">
    <Grid>
        <!--All this ListView styling and templating will eventually be turned into a self contained control and pushed to MatierlDesignToolKit-->
        <ListView x:Name="NavigationList" Grid.Column="0" SelectedIndex="0">
            <ListView.Style>
                <Style TargetType="{x:Type ListView}">
                    <Setter Property="SelectionMode" Value="Single"/>
                </Style>
            </ListView.Style>
            <ListView.Template>
                <ControlTemplate TargetType="ListView">
                    <Grid Grid.IsSharedSizeScope="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="NavigationDrawerWidth" Width="48" MaxWidth="320"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="56"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="PART_NavigationDrawerButtonBorder"
                                BorderBrush="{DynamicResource MaterialDesignDivider}"
                                Background="{DynamicResource PrimaryHueMidBrush}"
                                TextElement.Foreground="{DynamicResource MaterialDesignPaper}"
                                materialDesign:ShadowAssist.ShadowDepth="Depth1">
                            <ToggleButton x:Name="NavigationDrawerToggleButton"
                                      HorizontalAlignment="Right" Margin="4"
                                      Style="{StaticResource MaterialDesignHamburgerToggleButton}"/>
                        </Border>
                        <Border Grid.Column="0" Grid.Row="1"
                                BorderThickness="0 0 1 0"
                                Background="{DynamicResource MaterialDesignPaper}"
                                BorderBrush="{DynamicResource MaterialDesignDivider}">
                            <ItemsPresenter />
                        </Border>
                        <ContentPresenter Grid.Column="1" Grid.RowSpan="2"
                                          Content="{Binding Path=SelectedItem.(controls:ContentItem.Content), RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="NavigationDrawerToggleButton" Property="IsChecked" Value="True">
                            <Setter TargetName="NavigationDrawerWidth" Property="Width" Value="Auto"/>
                            <Setter TargetName="PART_NavigationDrawerButtonBorder" Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
                            <Setter TargetName="PART_NavigationDrawerButtonBorder" Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                            <Setter TargetName="PART_NavigationDrawerButtonBorder" Property="BorderThickness" Value="0 0 0 1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ListView.Template>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48"/>
                            <ColumnDefinition Width="*" MaxWidth="320"/>
                        </Grid.ColumnDefinitions>
                        <materialDesign:PackIcon Grid.Column="0" Width="28" Height="28" Margin="4 0 0 0" VerticalAlignment="Center"
                                                 Kind="{Binding Icon}" Foreground="{DynamicResource MaterialDesignBodyLight}"/>
                        <TextBlock Grid.Column="1" Text="{Binding Header}"  VerticalAlignment="Center"
                                   Style="{StaticResource MaterialDesignButtonTextBlock}"/>
                    </Grid>

                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.Items>
                <controls:ContentItem Header="Recent" Icon="History">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <controls:Toolbar/>
                        <local:RecentDevicesView x:Name="RecentDevicesView" ViewModel="{Binding RecentDevices}" Grid.Row="1"/>
                    </Grid>
                </controls:ContentItem>
                <controls:ContentItem  Header="Search" Icon="Magnify">
                    <local:SearchView x:Name="SearchView" ViewModel="{Binding Search}"/>
                </controls:ContentItem>
                <controls:ContentItem Header="Settings" Icon="Settings">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Opacity=".1"
                               Style="{StaticResource MaterialDesignDisplay4TextBlock}">🤷‍</TextBlock>
                </controls:ContentItem>
            </ListView.Items>
        </ListView>
        <!--<TabControl TabStripPlacement="Left">
            <TabItem Header="RECENT">
                <local:RecentDevicesView x:Name="RecentDevicesView" ViewModel="{Binding RecentDevices}"/>
            </TabItem>
            <TabItem Header="SEARCH">
                <local:SearchView x:Name="SearchView" ViewModel="{Binding Search}"/>
            </TabItem>
            <TabItem Header="SETTINGS">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Opacity=".1"
                           Style="{StaticResource MaterialDesignDisplay4TextBlock}">🤷‍</TextBlock>
            </TabItem>
        </TabControl>-->
        
        <!--<Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2">
                <ContentPresenter x:Name="NavigationPane" MaxWidth="250">
                    <ContentPresenter.Style>
                        <Style TargetType="ContentPresenter">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=This, Path=IsNavigationFocused, FallbackValue=true}" Value="False">
                                    <Setter Property="Margin" Value="0 52 0 0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentPresenter.Style>
                    <ContentPresenter.Content>
                        <views:NavigationView d:DataContext="{d:DesignInstance Type=mockViewModels:NavigationViewModel, IsDesignTimeCreatable=True}"/>
                    </ContentPresenter.Content>
                </ContentPresenter>-->
        <!--<Button VerticalAlignment="Top" HorizontalAlignment="Right" Padding="16" Height="52"
                        Style="{StaticResource MaterialDesignToolButton}"
                        materialDesign:RippleAssist.ClipToBounds="True"
                        Command="{Binding ElementName=This, Path=CollapseNavigation}"
                        Foreground="{DynamicResource SecondaryAccentForegroundBrush}"
                        Visibility="{Binding ElementName=NavigationToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:PackIcon Kind="ChevronLeft" />
                </Button>
                <ToggleButton x:Name="NavigationToggle" HorizontalAlignment="Left" VerticalAlignment="Top"
                              Margin="8" IsChecked="{Binding ElementName=This, Path=IsNavigationFocused, FallbackValue=true}"
                              Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                              Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"/>
                -->
        <!--Do I really want an invisible button overlaying the Navigation Drawer's toggle button just to capture the navigate back command?-->
        <!--
                <Button x:Name="NavigationDrawerButton" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10" 
                        Background="Transparent" BorderBrush="Transparent" materialDesign:ShadowAssist.ShadowDepth="Depth0" materialDesign:RippleAssist.ClipToBounds="False"
                        Command="{Binding ElementName=This, Path=ToggleNavigationCommand}" CommandParameter="{Binding ElementName=NavigationToggle, Path=IsChecked}"
                        Visibility="{Binding ElementName=NavigationToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>-->
        <!--<rxui:RoutedViewHost x:Name="ViewHost" Grid.Column="1" Grid.Row="1" 
                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Opacity=".1"
                           Style="{StaticResource MaterialDesignDisplay4TextBlock}">🤷‍</TextBlock>
            </rxui:RoutedViewHost>-->
        <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}" 
                                     x:Name="MainSnackbar"
                                     Grid.Column="0"
                                     Grid.ColumnSpan="2"
                                     Grid.Row="1"
                                     Margin="114,0,115,0" />
    </Grid>
</Page>
